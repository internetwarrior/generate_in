"""
Django settings for website project.

Generated by 'django-admin startproject' using Django 5.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
from datetime import timedelta
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
                          

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-m_5wghrn2xy=+uw77y2hr*2%us%nkdp@g-%fdym1s8a6&s8hl1'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
            '194.58.114.188',
            ]


# Application definition

INSTALLED_APPS = ['jazzmin',
"admin_notification",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    "whitenoise.runserver_nostatic",
    'django.contrib.staticfiles',
      "corsheaders",
    'rest_framework',
    'rest_framework_simplejwt',
    'userauth',
    'generator',
    'drf_yasg',
    
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
     "whitenoise.middleware.WhiteNoiseMiddleware",
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
]

#CORS_ALLOWED_ORIGINS = [
#            'http://194.58.114.188',
#                'https://194.58.114.188',
#                ]

CORS_ALLOW_ALL_ORIGINS =True

ROOT_URLCONF = 'a_config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'frontend')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'a_config.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases




#DATABASES = {
 #   'default': {
  #      'ENGINE': 'django.db.backends.sqlite3',
 #       'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
 #   }
#}


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'generate_in',
        'USER': 'gen_in',
        'PASSWORD': 'm8Qz5E8R6gP1xY2u',
        'HOST': 'localhost',
        'PORT': '3306',
    }
}






# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/



LANGUAGE_CODE = 'ru-RU'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True






# --‚Äê-----MEDIA---------
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
MEDIA_URL ='/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.AllowAny',
    ),
}



SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=6),  # Access token lifetime
    'REFRESH_TOKEN_LIFETIME': timedelta(days=90),  # Refresh token lifetime
    'ROTATE_REFRESH_TOKENS': True,  # Rotate refresh tokens on each request
    'BLACKLIST_AFTER_ROTATION': True,  # Blacklist old refresh tokens after rotation
    'UPDATE_LAST_LOGIN': True,  # Update the last login time on refresh
    'ALGORITHM': 'HS256',  # Encryption algorithm
    'SIGNING_KEY': 'your-secret-key',  # Secret key for encoding tokens
    'VERIFYING_KEY': None,  # Public key for decoding tokens (if using asymmetric encryption)
    'AUTH_HEADER_TYPES': ('Bearer',),  # Authentication header type
    'USER_ID_FIELD': 'id',  # User ID field in the token
      "TOKEN_OBTAIN_SERIALIZER": "userauth.views.MyTokenObtainPairSerializer",
    'USER_ID_CLAIM': 'user_id',  # Claim name for user ID in the token
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
}

NOTIFICATION_MODEL = 'generator.Invoice'



STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'frontend/static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'static')
